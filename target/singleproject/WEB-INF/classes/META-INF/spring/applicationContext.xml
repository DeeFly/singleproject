<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:beans="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:property-placeholder location="classpath:properties/db.properties,classpath:properties/value.properties"/>

    <!-- 如果使用superdiamond的话 , 多个配置文件，  不同类型的配置文件。 都可以写在这里-->
    <!--
    <beans:bean id="propertiesConfiguration" class="com.github.diamond.client.PropertiesConfigurationFactoryBean"/>
    <context:property-placeholder location="classpath:properties/db.properties,classpath:properties/value.properties" properties-ref="propertiesConfiguration" ignore-unresolvable="true"/>
    -->
    <!--写出来这个注解，会扫描代码中的切面注解。（不开启不扫描不执行）-->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 开启自动扫描，自动开启注解，可以使用注解了-->
    <context:component-scan base-package="com.gaofei.web">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <!--<bean id="tempService" class="com.gaofei.springtest.service.TempService">
        <property name="forInject" ref="forInject"/>
    </bean>
    <bean id="forInject" class="com.gaofei.springtest.service.ForInject"/>-->

    <!--通过配置文件方式给属性设值    冒号后面可以跟默认值，就是如果没有从配置文件中找到，就用冒号后面的值给属性注入-->
    <bean id="urlConstant" class="com.gaofei.web.constant.UrlConstant">
        <property name="serviceUrl" value="ceshiurl"/>
        <property name="jdbcUrl" value="${mysql.jdbc.url:morenzhiceshi}"/>
    </bean>

    <!--restTempplate 配置，这个没有试验过interceptors-->
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
        <property name="messageConverters">
            <list>
                <bean id="stringConverter" class="org.springframework.http.converter.StringHttpMessageConverter">
                    <constructor-arg value="UTF-8"/>
                </bean>
                <bean class="org.springframework.http.converter.FormHttpMessageConverter"/>
            </list>
        </property>
       <!-- <property name="interceptors">
            <list>
                <bean class="net.xuele.interceptor.http.RestTemplateFilter">
                    <constructor-arg ref="brave"/>
                </bean>
            </list>
        </property>-->
    </bean>
</beans>