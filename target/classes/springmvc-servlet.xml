<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

    <mvc:default-servlet-handler/>
    <!-- 开启注解,如果下面开启了自动扫描，那么就自动开启了注解 -->
    <mvc:annotation-driven/>
    <!--<context:component-scan base-package="com.gaofei.springtest.web"/>-->

    <context:component-scan base-package="com.gaofei.web"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!--jsp的viewResolver-->
    <!--<bean id="viewResolver"-->
    <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="prefix" value="/WEB-INF/jsp/"></property>-->
    <!--<property name="suffix" value=".jsp"></property>-->
    <!--</bean>-->

    <!--member中的velocity配置-->
    <!--<bean id="velocityConfig"-->
    <!--class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">-->
    <!--<property name="resourceLoaderPath" value="WEB-INF/velocity/"/>-->
    <!--<property name="velocityProperties">-->
    <!--<props>-->
    <!--<prop key="input.encoding">UTF-8</prop>-->
    <!--<prop key="output.encoding">UTF-8</prop>-->
    <!--<prop key="contentType">text/html;charset=UTF-8</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <!--<bean id="velocitySecurityUtil" class="net.xuele.common.utils.VelocitySecurityUtil"/>-->
    <!--&lt;!&ndash;velocity view reslover &ndash;&gt;-->
    <!--<bean id="viewReslover"-->
    <!--class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">-->
    <!--<property name="cache" value="false"/>-->
    <!--<property name="suffix" value=".vm"/>-->
    <!--<property name="contentType" value="text/html;charset=UTF-8"/>-->
    <!--<property name="exposeSessionAttributes" value="true"/>-->
    <!--<property name="requestContextAttribute" value="request"/>-->
    <!--<property name="layoutUrl" value="layout/defaultLayout.vm"/>-->
    <!--<property name="dateToolAttribute" value="dateTool"/>-->
    <!--<property name="numberToolAttribute" value="numTool"/>-->
    <!--&lt;!&ndash;<property name="toolboxConfigLocation" value="" />&ndash;&gt;-->
    <!--<property name="attributesMap">-->
    <!--<map>-->
    <!--<entry key="sec">-->
    <!--<ref bean="velocitySecurityUtil"/>-->
    <!--</entry>-->
    <!--</map>-->
    <!--</property>-->
    <!--</bean>-->


    <!-- 配置VelocityConfigurer，负责在spring中设置Velocity引擎。通过属性resourceLoaderPath告诉Velocity到哪里寻找它的模板。
   通常将模板放到WEB-INF下的某个子目录下，可以保证这些模板不能被直接访问。-->
    <bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath" value="/WEB-INF/velocity/templates"/>
        <property name="configLocation" value="classpath:velocity/velocity.properties"/>
    </bean>

    <!--为velocity自定义函数-->
    <bean id="stringUtill" class="com.gaofei.web.velocitytool.StringTool"></bean>

    <!--配置试图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name="cache" value="false"/>
        <property name="prefix" value=""/>               <!-- 视图文件的前缀，即存放的路径 -->
        <property name="suffix" value=".vm"/>          <!-- 视图文件的后缀名 -->
        <property name="layoutUrl" value="layout/defaultlayout.vm" /> <!--指定layout文件,配置layoutUrl设定系统默认的模板路径-->
        <property name="layoutKey" value="layout"></property>  <!--设定模板文件键值，设定该值后就可以在vm文件中使用该键值设置模板路径，-->
        <property name="screenContentKey" value="screen_content" />     <!--screenContentKey表示指定vm文件显示位置-->
        <property name="contentType" value="text/html;charset=utf-8"/> <!--指定编码-->
        <!--使用自定义函数-->
        <property name="attributesMap">
            <map>
                <entry key="sec">
                    <ref bean="stringUtill"/>
                </entry>
            </map>
        </property>
        <!--也可以通过下面这种方式为velocity添加自定义函数-->
        <property name="toolboxConfigLocation" value="/WEB-INF/toolbox.xml"/>
        <property name="exposeSpringMacroHelpers" value="true"/>       <!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true"/>          <!--是否开放request属性-->
        <property name="exposeSessionAttributes" value="true"/>         <!--是否开放session属性-->
        <property name="allowSessionOverride" value="true"/>
        <property name="allowRequestOverride" value="true"/>
        <!--<property name="requestContextAttribute" value="rc"/> &lt;!&ndash;      request属性引用名称&ndash;&gt;-->
    </bean>
</beans>